server.port=8777
spring.application.name=onboarding


#Postgres Config
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/deviceOnboarding2
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.schema=classpath:/Schema.sql
spring.datasource.continue-on-error=true

jwt.secret=secret

#Kafka Config
bootstrap.servers=127.0.0.1:9092
tcp.token.onboarding.token.request=device-onboarding-request
tcp.token.onboarding.token.response=device-onboarding-response
ccu.device.onboarding.request=device-onboarding1
ccu.device.onboarding.delete.device=delete-onboarded-device-request
ccu.device.onboarding.update.device=update-onboarding-device-request
groupId=onboarding-service
ccu.topic.name.updateCompany=update-company2
ccu.topic.name.deleteCompany=delete-company2
ccu.topic.name.updateMetro=update-metro2
ccu.topic.name.deleteMetro=delete-metro2
ccu.topic.name.updateStation=update-station2
ccu.topic.name.deleteStation=delete-station2

#BatchManaget
batchmanager.request.url=http://127.0.0.1:1111/logon

#Eureka config
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8661/eureka/
#eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


